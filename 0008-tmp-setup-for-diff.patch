From b068cfc812050f820c91b5995b3e0d9bc5eba836 Mon Sep 17 00:00:00 2001
From: wochae <officialwochae@gmail.com>
Date: Mon, 9 Jun 2025 17:44:11 +0900
Subject: [PATCH 08/33] [tmp]: setup for diff

---
 client/src/components/InterviewSetup.vue | 389 +++++++++++------------
 1 file changed, 194 insertions(+), 195 deletions(-)

diff --git a/client/src/components/InterviewSetup.vue b/client/src/components/InterviewSetup.vue
index 82c6fd6..94adad6 100644
--- a/client/src/components/InterviewSetup.vue
+++ b/client/src/components/InterviewSetup.vue
@@ -1,211 +1,210 @@
 <!-- InterviewSetup.vue -->
 <template>
-    <div class="min-h-screen bg-white flex justify-center items-center relative">
-      <button 
-        @click="showAdminLogin = true"
-        class="absolute top-4 right-4 text-gray-600 hover:text-gray-800 transition-colors cursor-pointer"
-      >
-        <i class="fas fa-cog text-2xl"></i>
-      </button>
-      <div class="w-full max-w-md bg-white rounded-lg shadow-lg p-8">
-        <div class="text-center mb-8">
-          <h1 class="text-4xl font-bold">
-            <span class="text-red-600">SK</span><span class="text-orange-500">AXIS</span>
-          </h1>
-        </div>
-        <div class="text-center mb-6">
-          <h2 class="text-2xl font-bold mb-2 text-gray-800">AI 면접 시스템</h2>
-          <p class="text-gray-600">면접 호실과 시간을 선택해주세요</p>
-        </div>
-        <!-- 날짜 선택 부분 -->
-        <div class="mb-4">
-          <label class="block text-sm font-medium text-gray-700 mb-1">면접 날짜</label>
-          <input
-            type="date"
-            v-model="selectedDate"
-            class="w-full px-3 py-2 bg-white border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-red-500"
-          />
-        </div>
-        <!-- 면접실 선택 부분 -->
-        <div class="mb-4">
-          <label class="block text-sm font-medium text-gray-700 mb-1">면접 호실</label>
-          <div class="relative">
+  <div class="min-h-screen bg-white flex justify-center items-center relative">
+    <button 
+      @click="showAdminLogin = true"
+      class="absolute top-4 right-4 text-gray-600 hover:text-gray-800 transition-colors cursor-pointer"
+    >
+      <i class="fas fa-cog text-2xl"></i>
+    </button>
+    <div class="w-full max-w-md bg-white rounded-lg shadow-lg p-8">
+      <div class="text-center mb-8">
+        <h1 class="text-4xl font-bold">
+          <span class="text-red-600">SK</span><span class="text-orange-500">AXIS</span>
+        </h1>
+      </div>
+      <div class="text-center mb-6">
+        <h2 class="text-2xl font-bold mb-2 text-gray-800">AI 면접 시스템</h2>
+        <p class="text-gray-600">면접 호실과 시간을 선택해주세요</p>
+      </div>
+      <!-- 날짜 선택 부분 -->
+      <div class="mb-4">
+        <label class="block text-sm font-medium text-gray-700 mb-1">면접 날짜</label>
+        <input
+          type="date"
+          v-model="selectedDate"
+          class="w-full px-3 py-2 bg-white border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-red-500"
+        />
+      </div>
+      <!-- 면접실 선택 부분 -->
+      <div class="mb-4">
+        <label class="block text-sm font-medium text-gray-700 mb-1">면접 호실</label>
+        <div class="relative">
+          <div
+            @click="toggleRoomDropdown"
+            class="w-full px-3 py-2 bg-white border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-red-500 cursor-pointer text-gray-700 flex justify-between items-center"
+          >
+            <span v-if="selectedRoom">{{ rooms.find(r => r.id === selectedRoom)?.name }}</span>
+            <span v-else class="text-gray-500">면접 호실을 선택해주세요</span>
+            <i class="fas fa-chevron-down text-gray-600"></i>
+          </div>
+          <div v-if="showRoomDropdown" class="absolute z-10 mt-1 w-full bg-white border border-gray-300 rounded-md shadow-lg">
             <div
-              @click="toggleRoomDropdown"
-              class="w-full px-3 py-2 bg-white border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-red-500 cursor-pointer text-gray-700 flex justify-between items-center"
+              v-for="room in rooms"
+              :key="room.id"
+              @click="selectRoom(room.id)"
+              class="px-3 py-2 hover:bg-gray-50 cursor-pointer"
             >
-              <span v-if="selectedRoom">{{ rooms.find(r => r.id === selectedRoom)?.name }}</span>
-              <span v-else class="text-gray-500">면접 호실을 선택해주세요</span>
-              <i class="fas fa-chevron-down text-gray-600"></i>
-            </div>
-            <div v-if="showRoomDropdown" class="absolute z-10 mt-1 w-full bg-white border border-gray-300 rounded-md shadow-lg">
-              <div
-                v-for="room in rooms"
-                :key="room.id"
-                @click="selectRoom(room.id)"
-                class="px-3 py-2 hover:bg-gray-50 cursor-pointer"
-              >
-                {{ room.name }}
-              </div>
+              {{ room.name }}
             </div>
           </div>
         </div>
-        <div class="mb-6" v-if="selectedRoom">
-          <label class="block text-sm font-medium text-gray-700 mb-2">면접 일정</label>
-          <div class="overflow-x-auto">
-            <table class="min-w-full bg-white border border-gray-200">
-              <thead>
-                <tr class="bg-gray-50">
-                  <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border-b">시간</th>
-                  <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border-b">면접관</th>
-                  <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border-b">지원자</th>
-                  <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border-b w-20">선택</th>
-                </tr>
-              </thead>
-              <tbody class="divide-y divide-gray-200">
-                <tr v-for="timeSlot in availableTimeSlots"
-                    :key="timeSlot.id"
-                    class="hover:bg-gray-50 cursor-pointer transition-colors"
-                    :class="{'bg-red-50': selectedTimeSlot === timeSlot.id}"
-                    @click="selectedTimeSlot = timeSlot.id">
-                  <td class="px-4 py-3 text-sm text-gray-900 whitespace-nowrap text-center">{{ timeSlot.timeRange }}</td>
-                  <td class="px-4 py-3 text-sm text-gray-600">
-                    <div class="flex flex-col items-center space-y-1">
-                      <div v-for="interviewerId in timeSlot.interviewerIds" :key="interviewerId" class="text-center">
-                        {{ getPersonById(interviewerId)?.name }}
-                      </div>
-                    </div>
-                  </td>
-                  <td class="px-4 py-3 text-sm text-gray-600">
-                    <div class="flex flex-col items-center space-y-1">
-                      <div v-for="candidateId in timeSlot.candidateIds" :key="candidateId" class="text-center">
-                        {{ getPersonById(candidateId)?.name }}
-                      </div>
+      </div>
+      <div class="mb-6" v-if="selectedRoom">
+        <label class="block text-sm font-medium text-gray-700 mb-2">면접 일정</label>
+        <div class="overflow-x-auto">
+          <table class="min-w-full bg-white border border-gray-200">
+            <thead>
+              <tr class="bg-gray-50">
+                <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border-b">시간</th>
+                <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border-b">면접관</th>
+                <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border-b">지원자</th>
+                <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider border-b w-20">선택</th>
+              </tr>
+            </thead>
+            <tbody class="divide-y divide-gray-200">
+              <tr v-for="timeSlot in availableTimeSlots"
+                  :key="timeSlot.id"
+                  class="hover:bg-gray-50 cursor-pointer transition-colors"
+                  :class="{'bg-red-50': selectedTimeSlot === timeSlot.id}"
+                  @click="selectedTimeSlot = timeSlot.id">
+                <td class="px-4 py-3 text-sm text-gray-900 whitespace-nowrap text-center">{{ timeSlot.timeRange }}</td>
+                <td class="px-4 py-3 text-sm text-gray-600">
+                  <div class="flex flex-col items-center space-y-1">
+                    <div v-for="interviewerId in timeSlot.interviewerIds" :key="interviewerId" class="text-center">
+                      {{ getPersonById(interviewerId)?.name }}
                     </div>
-                  </td>
-                  <td class="px-4 py-3 text-center">
-                    <div class="w-5 h-5 rounded-full border inline-flex items-center justify-center mx-auto"
-                         :class="selectedTimeSlot === timeSlot.id ? 'border-red-500 bg-red-500' : 'border-gray-300'">
-                      <i v-if="selectedTimeSlot === timeSlot.id" class="fas fa-check text-white text-xs"></i>
+                  </div>
+                </td>
+                <td class="px-4 py-3 text-sm text-gray-600">
+                  <div class="flex flex-col items-center space-y-1">
+                    <div v-for="candidateId in timeSlot.candidateIds" :key="candidateId" class="text-center">
+                      {{ getPersonById(candidateId)?.name }}
                     </div>
-                  </td>
-                </tr>
-              </tbody>
-            </table>
-          </div>
-        </div>
-        <button
-          class="w-full bg-red-600 text-white py-3 rounded-md font-medium hover:bg-red-700 transition-colors !rounded-button whitespace-nowrap cursor-pointer"
-          :disabled="!canProceed"
-          :class="{
-            'opacity-50 cursor-not-allowed': !canProceed,
-            'bg-gray-400': !isToday
-          }"
-          @click="onStartInterview"
-        >
-          {{ isToday ? '면접 시작하기' : '오늘 날짜의 면접만 시작할 수 있습니다' }}
-        </button>
-        <div class="mt-6 text-center text-xs text-gray-500">
-          <p>© 2025 SK AXIS. All rights reserved.</p>
-          <p>2025년 5월 29일 최신 기준</p>
+                  </div>
+                </td>
+                <td class="px-4 py-3 text-center">
+                  <div class="w-5 h-5 rounded-full border inline-flex items-center justify-center mx-auto"
+                       :class="selectedTimeSlot === timeSlot.id ? 'border-red-500 bg-red-500' : 'border-gray-300'">
+                    <i v-if="selectedTimeSlot === timeSlot.id" class="fas fa-check text-white text-xs"></i>
+                  </div>
+                </td>
+              </tr>
+            </tbody>
+          </table>
         </div>
       </div>
-      <!-- Admin Login Modal -->
-      <AdminLoginModal 
-        v-if="showAdminLogin"
-        @close="showAdminLogin = false"
-        @login="handleAdminLogin"
-      />
+      <button
+        class="w-full bg-red-600 text-white py-3 rounded-md font-medium hover:bg-red-700 transition-colors !rounded-button whitespace-nowrap cursor-pointer"
+        :disabled="!canProceed"
+        :class="{
+          'opacity-50 cursor-not-allowed': !canProceed,
+          'bg-gray-400': !isToday
+        }"
+        @click="onStartInterview"
+      >
+        {{ isToday ? '면접 시작하기' : '오늘 날짜의 면접만 시작할 수 있습니다' }}
+      </button>
+      <div class="mt-6 text-center text-xs text-gray-500">
+        <p>© 2025 SK AXIS. All rights reserved.</p>
+        <p>2025년 5월 29일 최신 기준</p>
+      </div>
     </div>
-  </template>
-  
-  <script setup lang="ts">
-  import { ref, computed, onMounted } from 'vue';
-  import { useRouter } from 'vue-router';
-  import type { Room, TimeSlot, Person } from '../data/interviewData';
-  import { getPersonById } from '../data/interviewData';
-  import AdminLoginModal from './AdminLoginModal.vue';
-  
-  interface Props {
-    rooms: Room[];
-    timeSlots: TimeSlot[];
-    people: Person[];
-  }
+    <!-- Admin Login Modal -->
+    <AdminLoginModal 
+      v-if="showAdminLogin"
+      @close="showAdminLogin = false"
+      @login="handleAdminLogin"
+    />
+  </div>
+</template>
+
+<script setup lang="ts">
+import { ref, computed, onMounted } from 'vue';
+import { useRouter } from 'vue-router';
+import type { Room, TimeSlot, Person } from '../data/interviewData';
+import { getPersonById } from '../data/interviewData';
+import AdminLoginModal from './AdminLoginModal.vue';
+
+interface Props {
+  rooms: Room[];
+  timeSlots: TimeSlot[];
+  people: Person[];
+}
+
+const props = withDefaults(defineProps<Props>(), {
+  rooms: () => [],
+  timeSlots: () => [],
+  people: () => []
+});
+
+const router = useRouter();
+
+const selectedRoom = ref<string>('');
+const selectedTimeSlot = ref<string>('');
+const showRoomDropdown = ref(false);
+const selectedDate = ref<string>(new Date().toISOString().split('T')[0]); // 오늘 날짜를 기본값으로
+const showAdminLogin = ref(false);
+
+// 오늘 날짜와 선택된 날짜가 일치하는지 확인하는 computed 속성 추가
+const isToday = computed(() => {
+  const today = new Date().toISOString().split('T')[0];
+  return selectedDate.value === today;
+});
+
+const availableTimeSlots = computed(() => {
+  if (!selectedRoom.value || !selectedDate.value) return [];
+  return props.timeSlots.filter(slot => 
+    slot.roomId === selectedRoom.value && 
+    slot.date === selectedDate.value &&
+    slot.candidateIds.length > 0
+  );
+});
+
+const canProceed = computed(() => {
+  return selectedRoom.value && 
+         selectedTimeSlot.value && 
+         isToday.value; // 오늘 날짜와 일치하는 경우에만 true
+});
+
+const toggleRoomDropdown = () => { showRoomDropdown.value = !showRoomDropdown.value; };
+const selectRoom = (roomId: string) => {
+  selectedRoom.value = roomId;
+  selectedTimeSlot.value = '';
+  showRoomDropdown.value = false;
+};
+
+const onStartInterview = () => {
+  if (!canProceed.value) return;
+  const timeSlot = availableTimeSlots.value.find(t => t.id === selectedTimeSlot.value);
+  if (!timeSlot) return;
   
-  const props = withDefaults(defineProps<Props>(), {
-    rooms: () => [],
-    timeSlots: () => [],
-    people: () => []
-  });
-  
-  const router = useRouter();
+  const roomName = props.rooms.find(r => r.id === selectedRoom.value)?.name || '';
   
-  const selectedRoom = ref<string>('');
-  const selectedTimeSlot = ref<string>('');
-  const showRoomDropdown = ref(false);
-  const selectedDate = ref<string>(new Date().toISOString().split('T')[0]); // 오늘 날짜를 기본값으로
-  const showAdminLogin = ref(false);
-  
-  // 오늘 날짜와 선택된 날짜가 일치하는지 확인하는 computed 속성 추가
-  const isToday = computed(() => {
-    const today = new Date().toISOString().split('T')[0];
-    return selectedDate.value === today;
+  router.push({
+    name: 'interview',
+    query: {
+      roomName,
+      date: selectedDate.value,
+      timeRange: timeSlot.timeRange,
+      interviewers: timeSlot.interviewerIds.map(id => getPersonById(id)?.name).join(', '),
+      candidates: JSON.stringify(timeSlot.candidateIds.map(id => getPersonById(id)?.name)),
+      candidateIds: JSON.stringify(timeSlot.candidateIds)
+    }
   });
-  
-  const availableTimeSlots = computed(() => {
-    if (!selectedRoom.value || !selectedDate.value) return [];
-    return props.timeSlots.filter(slot => 
-      slot.roomId === selectedRoom.value && 
-      slot.date === selectedDate.value &&
-      slot.candidateIds.length > 0
-    );
-  });
-  
-  const canProceed = computed(() => {
-    return selectedRoom.value && 
-           selectedTimeSlot.value && 
-           isToday.value; // 오늘 날짜와 일치하는 경우에만 true
-  });
-  
-  const toggleRoomDropdown = () => { showRoomDropdown.value = !showRoomDropdown.value; };
-  const selectRoom = (roomId: string) => {
-    selectedRoom.value = roomId;
-    selectedTimeSlot.value = '';
-    showRoomDropdown.value = false;
-  };
-  
-  const onStartInterview = () => {
-    if (!canProceed.value) return;
-    const timeSlot = availableTimeSlots.value.find(t => t.id === selectedTimeSlot.value);
-    if (!timeSlot) return;
-    
-    const roomName = props.rooms.find(r => r.id === selectedRoom.value)?.name || '';
-    
-    router.push({
-      name: 'interview',
-      query: {
-        roomName,
-        date: selectedDate.value,
-        timeRange: timeSlot.timeRange,
-        interviewers: timeSlot.interviewerIds.map(id => getPersonById(id)?.name).join(', '),
-        candidates: JSON.stringify(timeSlot.candidateIds.map(id => getPersonById(id)?.name)),
-        candidateIds: JSON.stringify(timeSlot.candidateIds)
-      }
-    });
-  };
-  
-  const handleAdminLogin = () => {
-    // 로그인 성공 시 관리자 대시보드로 이동
-    router.push('/admin');
-  };
-  
-  onMounted(() => {
-    document.addEventListener('click', (event) => {
-      const target = event.target as HTMLElement;
-      if (!target.closest('.relative') && showRoomDropdown.value) {
-        showRoomDropdown.value = false;
-      }
-    });
+};
+
+const handleAdminLogin = () => {
+  // 로그인 성공 시 관리자 대시보드로 이동
+  router.push('/admin');
+};
+
+onMounted(() => {
+  document.addEventListener('click', (event) => {
+    const target = event.target as HTMLElement;
+    if (!target.closest('.relative') && showRoomDropdown.value) {
+      showRoomDropdown.value = false;
+    }
   });
-  </script>
-  
\ No newline at end of file
+});
+</script>
-- 
2.39.5 (Apple Git-154)

