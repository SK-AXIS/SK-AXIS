openapi: 3.0.0
info:
  title: AI Interview System API
  version: "1.0"
  description: API specification for the AI Interview evaluation platform
servers:
  - url: http://localhost:8000
paths:
  /questions/{applicant_id}:
    get:
      summary: Get 5 interview questions for applicant
      parameters:
        - name: applicant_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of questions
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      type: string
 
  /report/pdf/{applicant_id}:
    get:
      summary: Download applicant PDF report
      parameters:
        - name: applicant_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: PDF file
          content:
            application/pdf:
              schema:
                type: string
                format: binary
  /report/excel:
    get:
      summary: Download all interview Excel summary
      responses:
        "200":
          description: Excel file
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
  /interviewees:
    get:
      summary: 면접자 목록 조회
      description: 모든 면접자의 정보를 반환합니다
      parameters:
        - name: date
          in: query
          required: false
          description: 면접 날짜로 필터링 (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: status
          in: query
          required: false
          description: 면접 진행 상태로 필터링
          schema:
            type: string
            enum: ["대기중", "진행중", "완료", "취소"]
        - name: position
          in: query
          required: false
          description: 직무로 필터링
          schema:
            type: string
      responses:
        "200":
          description: 면접자 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        applicant_name:
                          type: string
                          description: 지원자 이름
                          example: "홍길동"
                        applicant_id:
                          type: string
                          description: 지원식별ID
                          example: "APP-2024-001"
                        position:
                          type: string
                          description: 직무
                          example: "백엔드 개발자"
                        interview_date:
                          type: string
                          format: date
                          description: 면접 날짜
                          example: "2024-03-15"
                        interview_status:
                          type: string
                          description: 면접 진행 상태
                          enum: ["대기중", "진행중", "완료", "취소"]
                          example: "완료"
                        score:
                          type: integer
                          description: 점수
                          minimum: 0
                          maximum: 100
                          example: 85
                        interviewer:
                          type: string
                          description: 면접관
                          example: "김면접"
                        interview_location:
                          type: string
                          description: 면접 장소
                          example: "회의실 A"
                  total_count:
                    type: integer
                    description: 전체 면접자 수
                    example: 120
        "400":
          description: 잘못된 요청 파라미터
  /upload/excel:
    post:
      summary: Excel 파일 업로드
      description: 면접자 정보가 담긴 Excel 파일을 로컬 디렉토리에 저장하고 파일 경로를 반환합니다
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 업로드할 Excel 파일 (.xlsx, .xls)
              required:
                - file
      responses:
        "200":
          description: 파일 업로드 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "파일이 성공적으로 업로드되었습니다."
                  file_path:
                    type: string
                    description: 저장된 파일의 로컬 경로
                    example: "/uploads/interviewees/2024-03-15_면접자목록.xlsx"
                  file_name:
                    type: string
                    description: 원본 파일명
                    example: "면접자목록.xlsx"
                  upload_time:
                    type: string
                    format: date-time
                    description: 업로드 시간
                    example: "2024-03-15T14:30:00Z"
        "400":
          description: 잘못된 파일 형식 또는 파일 누락
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "지원되지 않는 파일 형식입니다. Excel 파일(.xlsx, .xls)만 업로드 가능합니다."
        "500":
          description: 서버 오류
  /parse/excel:
    post:
      summary: Excel 파일 파싱 및 데이터베이스 저장
      description: 업로드된 Excel 파일을 파싱하여 면접자 데이터를 데이터베이스에 저장합니다
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_path:
                  type: string
                  description: 파싱할 Excel 파일의 로컬 경로
                  example: "/uploads/interviewees/2024-03-15_면접자목록.xlsx"
              required:
                - file_path
      responses:
        "200":
          description: 파싱 및 저장 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Excel 파일이 성공적으로 파싱되어 데이터베이스에 저장되었습니다."
                  processed_count:
                    type: integer
                    description: 처리된 면접자 수
                    example: 25
                  success_count:
                    type: integer
                    description: 성공적으로 저장된 면접자 수
                    example: 23
                  error_count:
                    type: integer
                    description: 오류가 발생한 면접자 수
                    example: 2
                  errors:
                    type: array
                    description: 오류 상세 정보
                    items:
                      type: object
                      properties:
                        row:
                          type: integer
                          description: 오류가 발생한 행 번호
                        error_message:
                          type: string
                          description: 오류 메시지
        "400":
          description: 잘못된 파일 경로 또는 파일 형식
        "404":
          description: 파일을 찾을 수 없음
        "500":
          description: 서버 오류
  





