name: Build and Deploy to EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: deploy

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    # 이미지 빌드 및 푸시
    - name: Build and push AI (FastAPI) image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/skaxis-ai:latest ./ai
        docker push ${{ secrets.DOCKER_USERNAME }}/skaxis-ai:latest

    - name: Build and push Client (Vue.js) image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/skaxis-client:latest ./client
        docker push ${{ secrets.DOCKER_USERNAME }}/skaxis-client:latest

    - name: Build and push Server (SpringBoot) image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/skaxis-server:latest ./server/spring
        docker push ${{ secrets.DOCKER_USERNAME }}/skaxis-server:latest

    # EC2 배포 (docker run)
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_PORT }}
        script: |
          # 공통적으로 기존 컨테이너 정리
          docker stop skaxis-ai || true && docker rm skaxis-ai || true
          docker stop skaxis-client || true && docker rm skaxis-client || true
          docker stop skaxis-server || true && docker rm skaxis-server || true

          # 이미지 풀
          docker pull ${{ secrets.DOCKER_USERNAME }}/skaxis-ai:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/skaxis-client:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/skaxis-server:latest

          # 컨테이너 실행
          docker run -d --name skaxis-ai -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/skaxis-ai:latest
          docker run -d --name skaxis-client -p 3000:80 ${{ secrets.DOCKER_USERNAME }}/skaxis-client:latest
          docker run -d --name skaxis-server -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/skaxis-server:latest

          # 불필요 이미지 정리
          docker image prune -f
