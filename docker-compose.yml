version: '3.8'

services:
  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    platform: linux/amd64
    container_name: sk-axis-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-skaxis}
      MYSQL_USER: ${DB_USER:-skaxis}
      MYSQL_PASSWORD: ${DB_PASSWORD:-skaxispassword}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./server/spring/src/main/resources/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sk-axis-network

  # Redis 캐시
  redis:
    image: redis:latest
    platform: linux/amd64
    container_name: sk-axis-redis
    restart: always
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    networks:
      - sk-axis-network

  # FastAPI 서비스
  fastapi:
    build:
      context: ./ai
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
    container_name: sk-axis-fastapi
    restart: always
    ports:
      - "${FASTAPI_PORT:-8000}:8000"
    volumes:
      - ./ai:/app
      - shared-output:/app/output
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SPRING_API_URL=http://springboot:8080/api/v1
      - OUTPUT_DIR=/app/output
    depends_on:
      - springboot
    networks:
      - sk-axis-network

  # SpringBoot 서비스
  springboot:
    build:
      context: ./server/spring
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
    container_name: sk-axis-springboot
    restart: always
    ports:
      - "${SPRING_PORT:-8080}:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/${DB_NAME:-skaxis}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=${DB_USER:-skaxis}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD:-skaxispassword}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - FASTAPI_URL=http://fastapi:8000/api/v1
      - OUTPUT_DIR=/shared-output
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT:-6379}
    volumes:
      - shared-output:/shared-output
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - sk-axis-network

  # Vue 클라이언트
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
    container_name: sk-axis-vue
    restart: always
    ports:
      - "${CLIENT_PORT:-80}:80"
    depends_on:
      - fastapi
      - springboot
    networks:
      - sk-axis-network

volumes:
  mysql-data:
  redis-data:
  shared-output:

networks:
  sk-axis-network:
    driver: bridge
